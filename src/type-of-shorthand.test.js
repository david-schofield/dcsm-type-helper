import { typeOfShorthand } from './type-of-shorthand.js';

describe('typeOfShorthand', () => {
  describe('typeOfShorthand methods', () => {
    it('should return true if all values are of the specified type', () => {
      expect(typeOfShorthand.isString('hello', 'world')).toBe(true);
      expect(typeOfShorthand.isNumber(1, 2, 3)).toBe(true);
      expect(typeOfShorthand.isBoolean(true, false)).toBe(true);
      expect(typeOfShorthand.isObject({}, { a: 1 })).toBe(true);
      expect(typeOfShorthand.isArray([], [1, 2, 3])).toBe(true);
      expect(typeOfShorthand.isFunction(() => {}, function() {})).toBe(true);
      expect(typeOfShorthand.isNull(null, null)).toBe(true);
      expect(typeOfShorthand.isUndefined(undefined, undefined)).toBe(true);
    });

    it('should return false if not all values are of the specified type', () => {
      expect(typeOfShorthand.isString('hello', 123)).toBe(false);
      expect(typeOfShorthand.isNumber(1, '2', 3)).toBe(false);
      expect(typeOfShorthand.isBoolean(true, 'false')).toBe(false);
      expect(typeOfShorthand.isObject({}, [])).toBe(false);
      expect(typeOfShorthand.isArray([], {})).toBe(false);
      expect(typeOfShorthand.isFunction(() => {}, {})).toBe(false);
      expect(typeOfShorthand.isNull(null, undefined)).toBe(false);
      expect(typeOfShorthand.isUndefined(undefined, null)).toBe(false);
    });
  });
  describe('typeOfShorthand methods with someValueIs', () => {
    const {
      isArguments,
      notArguments,
      everyValueIsArguments,
      everyValueNotArguments,
      someValueIsArguments,
      someValueNotArguments,
      isArray,
      notArray,
      everyValueIsArray,
      everyValueNotArray,
      someValueIsArray,
      someValueNotArray,
      isArraybuffer,
      notArraybuffer,
      everyValueIsArraybuffer,
      everyValueNotArraybuffer,
      someValueIsArraybuffer,
      someValueNotArraybuffer,
      isArrayiterator,
      notArrayiterator,
      everyValueIsArrayiterator,
      everyValueNotArrayiterator,
      someValueIsArrayiterator,
      someValueNotArrayiterator,
      isAsyncfunction,
      notAsyncfunction,
      everyValueIsAsyncfunction,
      everyValueNotAsyncfunction,
      someValueIsAsyncfunction,
      someValueNotAsyncfunction,
      isAsyncgenerator,
      notAsyncgenerator,
      everyValueIsAsyncgenerator,
      everyValueNotAsyncgenerator,
      someValueIsAsyncgenerator,
      someValueNotAsyncgenerator,
      isAsyncgeneratorfunction,
      notAsyncgeneratorfunction,
      everyValueIsAsyncgeneratorfunction,
      everyValueNotAsyncgeneratorfunction,
      someValueIsAsyncgeneratorfunction,
      someValueNotAsyncgeneratorfunction,
      isBigint,
      notBigint,
      everyValueIsBigint,
      everyValueNotBigint,
      someValueIsBigint,
      someValueNotBigint,
      isBigint64array,
      notBigint64array,
      everyValueIsBigint64array,
      everyValueNotBigint64array,
      someValueIsBigint64array,
      someValueNotBigint64array,
      isBiguint64array,
      notBiguint64array,
      everyValueIsBiguint64array,
      everyValueNotBiguint64array,
      someValueIsBiguint64array,
      someValueNotBiguint64array,
      isBoolean,
      notBoolean,
      everyValueIsBoolean,
      everyValueNotBoolean,
      someValueIsBoolean,
      someValueNotBoolean,
      isDataview,
      notDataview,
      everyValueIsDataview,
      everyValueNotDataview,
      someValueIsDataview,
      someValueNotDataview,
      isDate,
      notDate,
      everyValueIsDate,
      everyValueNotDate,
      someValueIsDate,
      someValueNotDate,
      isError,
      notError,
      everyValueIsError,
      everyValueNotError,
      someValueIsError,
      someValueNotError,
      isFloat32array,
      notFloat32array,
      everyValueIsFloat32array,
      everyValueNotFloat32array,
      someValueIsFloat32array,
      someValueNotFloat32array,
      isFloat64array,
      notFloat64array,
      everyValueIsFloat64array,
      everyValueNotFloat64array,
      someValueIsFloat64array,
      someValueNotFloat64array,
      isFunction,
      notFunction,
      everyValueIsFunction,
      everyValueNotFunction,
      someValueIsFunction,
      someValueNotFunction,
      isGenerator,
      notGenerator,
      everyValueIsGenerator,
      everyValueNotGenerator,
      someValueIsGenerator,
      someValueNotGenerator,
      isGeneratorfunction,
      notGeneratorfunction,
      everyValueIsGeneratorfunction,
      everyValueNotGeneratorfunction,
      someValueIsGeneratorfunction,
      someValueNotGeneratorfunction,
      isInfinity,
      notInfinity,
      everyValueIsInfinity,
      everyValueNotInfinity,
      someValueIsInfinity,
      someValueNotInfinity,
      isInt16array,
      notInt16array,
      everyValueIsInt16array,
      everyValueNotInt16array,
      someValueIsInt16array,
      someValueNotInt16array,
      isInt32array,
      notInt32array,
      everyValueIsInt32array,
      everyValueNotInt32array,
      someValueIsInt32array,
      someValueNotInt32array,
      isInt8array,
      notInt8array,
      everyValueIsInt8array,
      everyValueNotInt8array,
      someValueIsInt8array,
      someValueNotInt8array,
      isInternal,
      notInternal,
      everyValueIsInternal,
      everyValueNotInternal,
      someValueIsInternal,
      someValueNotInternal,
      isMap,
      notMap,
      everyValueIsMap,
      everyValueNotMap,
      someValueIsMap,
      someValueNotMap,
      isMapiterator,
      notMapiterator,
      everyValueIsMapiterator,
      everyValueNotMapiterator,
      someValueIsMapiterator,
      someValueNotMapiterator,
      isModule,
      notModule,
      everyValueIsModule,
      everyValueNotModule,
      someValueIsModule,
      someValueNotModule,
      isModulenamespaceobject,
      notModulenamespaceobject,
      everyValueIsModulenamespaceobject,
      everyValueNotModulenamespaceobject,
      someValueIsModulenamespaceobject,
      someValueNotModulenamespaceobject,
      isNan,
      notNan,
      everyValueIsNan,
      everyValueNotNan,
      someValueIsNan,
      someValueNotNan,
      isNull,
      notNull,
      everyValueIsNull,
      everyValueNotNull,
      someValueIsNull,
      someValueNotNull,
      isNumber,
      notNumber,
      everyValueIsNumber,
      everyValueNotNumber,
      someValueIsNumber,
      someValueNotNumber,
      isObject,
      notObject,
      everyValueIsObject,
      everyValueNotObject,
      someValueIsObject,
      someValueNotObject,
      isPromise,
      notPromise,
      everyValueIsPromise,
      everyValueNotPromise,
      someValueIsPromise,
      someValueNotPromise,
      isProxy,
      notProxy,
      everyValueIsProxy,
      everyValueNotProxy,
      someValueIsProxy,
      someValueNotProxy,
      isRegexp,
      notRegexp,
      everyValueIsRegexp,
      everyValueNotRegexp,
      someValueIsRegexp,
      someValueNotRegexp,
      isSet,
      notSet,
      everyValueIsSet,
      everyValueNotSet,
      someValueIsSet,
      someValueNotSet,
      isSetiterator,
      notSetiterator,
      everyValueIsSetiterator,
      everyValueNotSetiterator,
      someValueIsSetiterator,
      someValueNotSetiterator,
      isString,
      notString,
      everyValueIsString,
      everyValueNotString,
      someValueIsString,
      someValueNotString,
      isStringiterator,
      notStringiterator,
      everyValueIsStringiterator,
      everyValueNotStringiterator,
      someValueIsStringiterator,
      someValueNotStringiterator,
      isSymbol,
      notSymbol,
      everyValueIsSymbol,
      everyValueNotSymbol,
      someValueIsSymbol,
      someValueNotSymbol,
      isTypedarray,
      notTypedarray,
      everyValueIsTypedarray,
      everyValueNotTypedarray,
      someValueIsTypedarray,
      someValueNotTypedarray,
      isUint16array,
      notUint16array,
      everyValueIsUint16array,
      everyValueNotUint16array,
      someValueIsUint16array,
      someValueNotUint16array,
      isUint32array,
      notUint32array,
      everyValueIsUint32array,
      everyValueNotUint32array,
      someValueIsUint32array,
      someValueNotUint32array,
      isUint8array,
      notUint8array,
      everyValueIsUint8array,
      everyValueNotUint8array,
      someValueIsUint8array,
      someValueNotUint8array,
      isUint8clampedarray,
      notUint8clampedarray,
      everyValueIsUint8clampedarray,
      everyValueNotUint8clampedarray,
      someValueIsUint8clampedarray,
      someValueNotUint8clampedarray,
      isUndefined,
      notUndefined,
      everyValueIsUndefined,
      everyValueNotUndefined,
      someValueIsUndefined,
      someValueNotUndefined,
      isWeakmap,
      notWeakmap,
      everyValueIsWeakmap,
      everyValueNotWeakmap,
      someValueIsWeakmap,
      someValueNotWeakmap,
      isWeakset,
      notWeakset,
      everyValueIsWeakset,
      everyValueNotWeakset,
      someValueIsWeakset,
      someValueNotWeakset,
      isEmptyArray,
      notEmptyArray,
      everyValueIsEmptyArray,
      everyValueNotEmptyArray,
      someValueIsEmptyArray,
      someValueNotEmptyArray,
      isEmptyObject,
      notEmptyObject,
      everyValueIsEmptyObject,
      everyValueNotEmptyObject,
      someValueIsEmptyObject,
      someValueNotEmptyObject,
      isEmptyString,
      notEmptyString,
      everyValueIsEmptyString,
      everyValueNotEmptyString,
      someValueIsEmptyString,
      someValueNotEmptyString,
      isEmpty,
      notEmpty,
      everyValueIsEmpty,
      everyValueNotEmpty,
      someValueIsEmpty,
      someValueNotEmpty,
      isBooleanTrue,
      notBooleanTrue,
      everyValueIsBooleanTrue,
      everyValueNotBooleanTrue,
      someValueIsBooleanTrue,
      someValueNotBooleanTrue,
      isBooleanFalse,
      notBooleanFalse,
      everyValueIsBooleanFalse,
      everyValueNotBooleanFalse,
      someValueIsBooleanFalse,
      someValueNotBooleanFalse,
      isNumberZero,
      notNumberZero,
      everyValueIsNumberZero,
      everyValueNotNumberZero,
      someValueIsNumberZero,
      someValueNotNumberZero,
      isNumberPositive,
      notNumberPositive,
      everyValueIsNumberPositive,
      everyValueNotNumberPositive,
      someValueIsNumberPositive,
      someValueNotNumberPositive,
      isNumberNegative,
      notNumberNegative,
      everyValueIsNumberNegative,
      everyValueNotNumberNegative,
      someValueIsNumberNegative,
      someValueNotNumberNegative,
      isNumberMaxSafeInteger,
      notNumberMaxSafeInteger,
      everyValueIsNumberMaxSafeInteger,
      everyValueNotNumberMaxSafeInteger,
      someValueIsNumberMaxSafeInteger,
      someValueNotNumberMaxSafeInteger
    } = typeOfShorthand;

    describe('isString', () => {
      it('should return true if all values are String', () => {
        expect(isString('1', 'two')).toBe(true);
      });

      it('should return false if not all values are String', () => {
        expect(isString('1', 2)).toBe(false);
      });
    });

    describe('notString', () => {
      it('should return false if all values are String', () => {
        expect(notString('1', 'two')).toBe(false);
      });

      it('should return true if not all values are String', () => {
        expect(notString(1, 2)).toBe(true);
      });
    });

  });
});